name: CI

on:
  push:
    branches: [main, develop, 'ci/**']
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: messaging
          POSTGRES_USER: messaging
          POSTGRES_PASSWORD: messaging
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Initialize database schema
        run: |
          PGPASSWORD=messaging psql -h localhost -p 5433 -U messaging -d messaging -f services/messaging/schema.sql
        env:
          DATABASE_URL: postgresql://messaging:messaging@localhost:5433/messaging

      - name: Run linter
        run: pnpm lint

      - name: Run type check
        run: pnpm typecheck

      - name: Run tests
        run: pnpm test
        env:
          DATABASE_URL: postgresql://messaging:messaging@localhost:5433/messaging
          NODE_ENV: test

      - name: Check coverage
        run: pnpm check:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
